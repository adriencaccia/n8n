diff --git a/dist/index.cjs.js b/dist/index.cjs.js
index a75964e40eaeff15df33fabd3c0bef20e9b1e5dd..5f17a0ba1c348fd9fa36830ac217b3a271fd901d 100644
--- a/dist/index.cjs.js
+++ b/dist/index.cjs.js
@@ -67,7 +67,7 @@ function isCodSpeedBenchOptions(options) {
   return "uri" in options;
 }
 function withCodSpeed(bench) {
-  if (!core.Measurement.isInstrumented()) {
+  if (false) {
     const rawRun = bench.run;
     bench.run = async () => {
       console.warn(
@@ -89,13 +89,17 @@ function withCodSpeed(bench) {
     console.log(`[CodSpeed] running with @codspeed/tinybench v${"3.1.0"}`);
     core.setupCore();
     for (const task of bench.tasks) {
-      const uri = isCodSpeedBenchOptions(task.opts) ? task.opts.uri : `${rootCallingFile}::${task.name}`;
+      let uri = isCodSpeedBenchOptions(task.opts) ? task.opts.uri : `${rootCallingFile}::${task.name}`;
+      uri = uri.replaceAll("\n", "\\n").replaceAll("\t", "\\t");
       await task.opts.beforeAll?.call(task);
-      await core.optimizeFunction(async () => {
+      const optimize = async () => await core.optimizeFunction(async () => {
         await task.opts.beforeEach?.call(task);
         await task.fn();
         await task.opts.afterEach?.call(task);
       });
+      for (let i = 0; i < 1000; i++) {
+        await optimize();
+      }
       await task.opts.beforeEach?.call(task);
       await core.mongoMeasurement.start(uri);
       await async function __codspeed_root_frame__() {
diff --git a/dist/index.es5.js b/dist/index.es5.js
index e20505951341fbfe7a9142c222aff1221ab19530..626ee3ea69f4b6a8cb6173ad2d72c6cae4063b1a 100644
--- a/dist/index.es5.js
+++ b/dist/index.es5.js
@@ -65,7 +65,7 @@ function isCodSpeedBenchOptions(options) {
   return "uri" in options;
 }
 function withCodSpeed(bench) {
-  if (!Measurement.isInstrumented()) {
+  if (false) {
     const rawRun = bench.run;
     bench.run = async () => {
       console.warn(
@@ -87,13 +87,17 @@ function withCodSpeed(bench) {
     console.log(`[CodSpeed] running with @codspeed/tinybench v${"3.1.0"}`);
     setupCore();
     for (const task of bench.tasks) {
-      const uri = isCodSpeedBenchOptions(task.opts) ? task.opts.uri : `${rootCallingFile}::${task.name}`;
+      let uri = isCodSpeedBenchOptions(task.opts) ? task.opts.uri : `${rootCallingFile}::${task.name}`;
+      uri = uri.replaceAll("\n", "\\n").replaceAll("\t", "\\t");
       await task.opts.beforeAll?.call(task);
-      await optimizeFunction(async () => {
+      const optimize = async () => await core.optimizeFunction(async () => {
         await task.opts.beforeEach?.call(task);
         await task.fn();
         await task.opts.afterEach?.call(task);
       });
+      for (let i = 0; i < 1000; i++) {
+        await optimize();
+      }
       await task.opts.beforeEach?.call(task);
       await mongoMeasurement.start(uri);
       await async function __codspeed_root_frame__() {
